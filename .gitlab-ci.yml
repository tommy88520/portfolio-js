variables:
  PROJECT_NAME: luo-dian
  DOCKER_REGISTRY_URL: asia-east1-docker.pkg.dev
  BUILD_CONFIG_FILE: vm-cloudbuild.yaml
  NIC0_SUBNET: luo-dian
  SERVICE_ACCOUNT: 274669080395-compute@developer.gserviceaccount.com
  RELEASE_IMAGE_ENDPOINT: luo-dian/luo-dian/release

stages:
  - build_container
  # - create_template
  # - deploy
  # - clean

.base_gcloud_job:
  image: google/cloud-sdk:latest
  before_script:
    - gcloud --version
    - gcloud auth activate-service-account --key-file ./config/key/luo-dian-e51c494a9850.json
    - gcloud config set project ${PROJECT_NAME}
    - gcloud config set compute/region asia-east1
    - gcloud config set disable_prompts true

.build:
  extends: .base_gcloud_job
  stage: build_container
  script:
    - echo ${CI_COMMIT_BRANCH}
    - echo ${IMAGE_ENDPOINT}
    - echo ${DOCKER_TAG}
    - echo ${CI_COMMIT_SHA}
    - >
      gcloud beta builds submit
      --config=${BUILD_CONFIG_FILE}
      --ignore-file=.gcloudignore
      --substitutions _DOCKER_REGISTRY_URL=${DOCKER_REGISTRY_URL},_IMAGE_ENDPOINT=${IMAGE_ENDPOINT},_DOCKER_TAG=${CI_COMMIT_SHA},_DOCKER_FILE_LOCAL=${DOCKER_FILE_LOCAL}
    - >
      gcloud container images add-tag
      ${DOCKER_REGISTRY_URL}/${IMAGE_ENDPOINT}:${CI_COMMIT_SHA}
      ${DOCKER_REGISTRY_URL}/${IMAGE_ENDPOINT}:${DOCKER_TAG}

.create:
  extends: .base_gcloud_job
  stage: create_template
  script:
    - echo ${TEMPLATE_NAME}
    - >
      gcloud compute instance-templates create-with-container ${TEMPLATE_NAME}
      --machine-type=${MACHINE_TYPE}
      --boot-disk-size=10
      --boot-disk-type=pd-balanced
      --boot-disk-device-name=${TEMPLATE_NAME}
      --network-interface=subnet=${NIC0_SUBNET},no-address
      --service-account=${SERVICE_ACCOUNT}
      --tags=health-check,iap-tunnel-ssh,${PROJECT_NAME},http-server,https-server
      --container-image=${DOCKER_REGISTRY_URL}/${IMAGE_ENDPOINT}:${CI_COMMIT_SHA}
      --shielded-integrity-monitoring
      --shielded-vtpm

.deploy:
  extends: .base_gcloud_job
  stage: deploy
  script:
    - gcloud compute instance-groups managed rolling-action start-update ${INSTANCES_GROUP_NAME} --version=template=${TEMPLATE_NAME} --max-surge=3 --max-unavailable=0 --zone=asia-east1-c
    - >
      gcloud container images add-tag
      ${DOCKER_REGISTRY_URL}/${IMAGE_ENDPOINT}:${CI_COMMIT_SHA}
      ${DOCKER_REGISTRY_URL}/${IMAGE_ENDPOINT}:running

.clean:
  extends: .base_gcloud_job
  stage: clean
  script:
    - |
      i=0
      for digest in $(gcloud artifacts docker images list --include-tags ${DOCKER_REGISTRY_URL}/${IMAGE_ENDPOINT} --filter="-tags:(${DOCKER_TAG}, running, ${CI_COMMIT_SHA})" --sort-by='~CREATE_TIME' --format='get(DIGEST)' --limit=1000); do
        if [ $i -lt 10 ]; then
          echo "keep ${digest}"
        else
          echo "delete ${digest}"
          gcloud artifacts docker images delete  ${DOCKER_REGISTRY_URL}/${IMAGE_ENDPOINT}@${digest} --delete-tags
        fi
        i=$(($i + 1))
      done
    - |
      i=0
      for template in $(gcloud compute instance-templates list --filter="name=${BASE_TEMPLATE}" --sort-by='~creationTimestamp' --format='value(NAME)' --limit=1000); do
      if [ $i -lt 10 ]; then
          echo "keep ${template}"
      else
          echo "delete ${template}"
          gcloud compute instance-templates delete ${template}
      fi
      i=$(($i + 1))
      done

release_build:
  # extends: .build
  stage: build_container
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  script:
    - latest_tag=$(git describe --tags --abbrev=0)
    - echo "最新的标签222：$latest_tag"
  variables:
    IMAGE_ENDPOINT: ${RELEASE_IMAGE_ENDPOINT}
    DOCKER_TAG: release
    INSTANCES_GROUP_NAME: luo-dian-backend-release-group
    DOCKER_FILE_LOCAL: ./Dockerfile

# release_create:
#   extends: .create
#   rules:
#     - if: $CI_COMMIT_BRANCH == 'nestjs-release' && $CI_PROJECT_PATH == 'luo-dian/luo-dian'
#   variables:
#     IMAGE_ENDPOINT: ${RELEASE_IMAGE_ENDPOINT}
#     TEMPLATE_NAME: luo-dian-backend-release-template-${CI_COMMIT_SHORT_SHA}
#     MACHINE_TYPE: f1-micro   
    
# release_deploy:
#   extends: .deploy
#   rules:
#     - if: $CI_COMMIT_BRANCH == 'nestjs-release' && $CI_PROJECT_PATH == 'luo-dian/luo-dian'
#   variables:
#     IMAGE_ENDPOINT: ${RELEASE_IMAGE_ENDPOINT}
#     DOCKER_TAG: release
#     INSTANCES_GROUP_NAME: luo-dian-backend-release-group
#     TEMPLATE_NAME: luo-dian-backend-release-template-${CI_COMMIT_SHORT_SHA}

# release_clean:
#   extends: .clean
#   rules:
#     - if: $CI_COMMIT_BRANCH == 'nestjs-release' && $CI_PROJECT_PATH == 'luo-dian/luo-dian'
#   variables:
#     IMAGE_ENDPOINT: ${RELEASE_IMAGE_ENDPOINT}
#     BASE_TEMPLATE: luo-dian-backend-release-template
#     DOCKER_TAG: release
